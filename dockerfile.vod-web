#docker build --tag vodweb --file dockerfile.vod-web .
#docker run --rm -d -e API_URL=http://<IP or DNS of API server>:9090/api -p 8080:8080 vodweb

FROM vodbase

WORKDIR /app/packages

COPY packages/vod-web ./vod-web
COPY packages/vod-client ./vod-client
COPY packages/vod-auth ./vod-auth
COPY packages/vod-object-storage-client ./vod-object-storage-client

RUN npm i lerna -g \
    && lerna bootstrap -- --production --scope=@vod/vod-web --scope=@vod/vod-client --scope=@vod/vod-auth --scope=@vod/vod-object-storage-client \
    && npm uninstall -g lerna

# Create a directpry for the build
WORKDIR /app/packages/vod-web/public

WORKDIR /app/packages/vod-client

RUN npm run build
RUN cp -r ./build ../vod-web/public \
    && rm -rf /app/packages/vod-client

WORKDIR /app/packages/vod-web

# Copy .env file and shell script to container
COPY deployment/RuntimeEnvCRASolution/env.sh .
COPY deployment/RuntimeEnvCRASolution/.env .

# Add bash
RUN apk add bash && rm -rf /var/lib/apt/lists/*

# Make our shell script executable
RUN chmod +x env.sh

EXPOSE 8080
CMD [ "/bin/bash", "-c", "/app/packages/vod-web/env.sh && npm start" ]